---
import Layout from "../layouts/Layout.astro";
import PlotFigureCO2 from "../components/PlotFigureCO2.astro";

const _rawModule = await import("../assets/emission_co2_triee.json", {
  assert: { type: "json" },
});
const rawData = ((_rawModule as any)?.default ?? (_rawModule as any)) || [];

const modeKeys = [
  { key: "Train_CO2e", mode: "Train" },
  { key: "Bus_CO2e", mode: "Autocar" },
  { key: "Avion_CO2e", mode: "Avion" },
  { key: "VoitureElec_CO2e", mode: "Voiture √©lectrique" },
  { key: "VoitureTherm_CO2e", mode: "Voiture thermique" },
];

const trajets = rawData
  .map((d: any) => d.Trajet)
  .filter(Boolean)
  .sort();

function getDataForTrajetServer(trajet: any) {
  const row = rawData.find((d: any) => d.Trajet === trajet);
  if (!row) return [];
  return modeKeys
    .map(({ key, mode }) => ({ mode, CO2e: Number(row[key]) || 0 }))
    .filter((d) => d.CO2e > 0);
}

const initialTrajet = trajets[0];
const aggregated = getDataForTrajetServer(initialTrajet);
---

<Layout>
  <section class="relative bg-[#f9f8f6] text-[#1a1a1a]">
    <div
      class="max-w-6xl mx-auto px-6 py-28 sm:py-40 flex flex-col sm:flex-row items-center gap-12"
    >
      <div class="flex-1">
        <h1 class="text-5xl sm:text-6xl font-extrabold mb-4 tracking-tight">
          Le Pari du Train
        </h1>
        <p class="text-xl font-light text-[#555] mb-8 leading-relaxed">
          Entre urgence climatique et r√©alit√© du terrain
        </p>
        <p class="text-base text-[#666] mb-10 leading-relaxed max-w-lg">
          Le train s‚Äôimpose comme la solution la plus sobre pour voyager.
          Pourtant, son usage reste marginal face √† la voiture. Ce projet
          explore pourquoi, √† travers des donn√©es concr√®tes et une analyse
          visuelle du territoire.
        </p>
        <a
          href="#analyse"
          class="inline-block border border-black text-black px-6 py-3 hover:bg-black hover:text-white transition-colors text-sm"
        >
          D√©couvrir les donn√©es ‚Üí
        </a>
      </div>

      <div class="flex-1">
        <img
          src="/Principale.webp"
          alt="TGV en mouvement"
          class="rounded-2xl shadow-xl object-cover w-full h-72 sm:h-96"
        />
      </div>
    </div>
  </section>

  <main class="max-w-6xl mx-auto px-6 py-24 bg-white" id="analyse">
    <section class="mb-20">
      <div class="mb-12 text-center">
        <h2 class="text-4xl font-semibold text-gray-900 mb-3">
          √âmissions de CO‚ÇÇ par mode de transport
        </h2>
        <p class="text-lg text-gray-600 max-w-2xl mx-auto">
          Le transport repr√©sente pr√®s d‚Äôun tiers des √©missions nationales de
          CO‚ÇÇ. Le train reste imbattable en mati√®re de sobri√©t√© carbone.
        </p>
      </div>

      <div class="bg-[#fdfbf8] border border-gray-200 rounded-2xl shadow-sm">
        <div class="px-8 py-6 border-b border-gray-200">
          <label
            for="trajet"
            class="block text-sm font-medium text-gray-700 mb-3"
          >
            S√©lectionnez un trajet
          </label>
          <select
            id="trajet"
            class="w-full sm:w-auto border border-gray-300 px-4 py-2 text-sm rounded-md focus:border-black focus:ring-1 focus:ring-black transition"
            data-raw={JSON.stringify(rawData)}
            data-modekeys={JSON.stringify(modeKeys)}
          >
            {
              trajets.map((t: any, i: any) => (
                <option value={t} selected={i === 0}>
                  {t}
                </option>
              ))
            }
          </select>
        </div>

        <div class="px-8 py-8">
          <div id="chart" class="min-h-[440px]">
            <PlotFigureCO2
              data={aggregated}
              config={{
                y: { label: "√âmissions (kg CO‚ÇÇe / passager)", grid: true },
                x: { label: "Mode de transport" },
                color: {
                  domain: [
                    "Train",
                    "Autocar",
                    "Avion",
                    "Voiture √©lectrique",
                    "Voiture thermique",
                  ],
                  range: [
                    "#2563eb",
                    "#f59e0b",
                    "#ef4444",
                    "#06b6d4",
                    "#6b7280",
                  ],
                  legend: true,
                  label: "Mode de transport",
                },
                width: 760,
                height: 440,
                marginBottom: 60,
                style: { fontSize: "13px" },
              }}
            />
          </div>
        </div>

        <div
          class="px-8 py-4 bg-[#f5f4f2] border-t border-gray-200 text-sm text-gray-500 rounded-b-2xl"
        >
          Source :
          <a
            href="https://www.data.gouv.fr/api/1/datasets/r/86bb950c-3ad4-4d32-8126-8a236f8449b2"
            class="underline hover:text-black"
          >
            data.gouv.fr ‚Äì Bilan CO‚ÇÇ par mode de transport (ADEME)
          </a>
        </div>
      </div>

      <div
        class="mt-10 px-6 py-4 bg-[#fefae0] border-l-4 border-[#a68a64] max-w-3xl mx-auto rounded-r-md"
      >
        <p class="text-sm text-gray-700">
          üí° <strong>Constat :</strong> Le train √©met 32√ó moins de CO‚ÇÇ que la voiture
          thermique, mais reste minoritaire dans les d√©placements longue distance.
        </p>
      </div>
    </section>

    <div class="border-t border-gray-200 my-16"></div>

    <section class="py-16 text-center">
      <h2 class="text-2xl font-light text-gray-900 mb-4">
        Si le train est si vertueux, pourquoi reste-t-il si peu utilis√© ?
      </h2>
      <p class="text-gray-600 mb-8 max-w-2xl mx-auto">
        Pour le comprendre, analysons la r√©alit√© du terrain : accessibilit√© des
        gares, maillage du r√©seau et pr√©sence d‚Äôinfrastructures autour.
      </p>
      <a
        href="/sliderCarte"
        class="inline-block border border-black px-6 py-3 text-sm hover:bg-black hover:text-white transition-colors"
      >
        Explorer le r√©seau ferroviaire ‚Üí
      </a>
    </section>
  </main>

  <script type="module">
    const select = document.querySelector("#trajet");
    const chartContainer = document.querySelector("#chart");
    const rawData = JSON.parse(select.dataset.raw);
    const modeKeys = JSON.parse(select.dataset.modekeys);
    function getDataForTrajet(trajet) {
      const row = rawData.find((d) => d.Trajet === trajet);
      if (!row) return [];
      return modeKeys
        .map(({ key, mode }) => ({ mode, CO2e: Number(row[key]) || 0 }))
        .filter((d) => d.CO2e > 0);
    }
    (async () => {
      try {
        const clientModule = await import("/src/script/plotClient.js");
        function renderChart(trajet) {
          const data = getDataForTrajet(trajet);
          clientModule.renderChart(chartContainer, data, {
            y: { label: "√âmissions (kg CO‚ÇÇe / passager)", grid: true },
            x: { label: "Mode de transport" },
            color: {
              domain: [
                "Train",
                "Autocar",
                "Avion",
                "Voiture √©lectrique",
                "Voiture thermique",
              ],
              range: ["#2563eb", "#f59e0b", "#ef4444", "#06b6d4", "#6b7280"],
              legend: true,
              label: "Mode de transport",
            },
            width: 760,
            height: 440,
            marginBottom: 60,
            style: { fontSize: "13px" },
          });
        }
        try {
          renderChart(select.value);
        } catch (err) {
          console.error("Erreur lors du rendu initial du graphique:", err);
        }
        select.addEventListener("change", (e) => {
          try {
            renderChart(e.target.value);
          } catch (err) {
            console.error("Erreur lors de la mise √† jour du graphique:", err);
          }
        });
      } catch (err) {
        console.error("Erreur de chargement :", err);
      }
    })();
  </script>
</Layout>
