---
import Layout from "../layouts/Layout.astro";

const _rawModule = await import("../assets/emission_co2_triee.json", {
  assert: { type: "json" },
});
const rawData = ((_rawModule as any)?.default ?? (_rawModule as any)) || [];

const modeKeys = [
  { key: "Train_CO2e", mode: "Train" },
  { key: "Bus_CO2e", mode: "Autocar" },
  { key: "Avion_CO2e", mode: "Avion" },
  { key: "VoitureElec_CO2e", mode: "Voiture √©lectrique" },
  { key: "VoitureTherm_CO2e", mode: "Voiture thermique" },
];

const trajets = rawData
  .map((d: any) => d.Trajet)
  .filter(Boolean)
  .sort();

const initialTrajet = trajets[0];
---

<Layout>
  <section class="relative bg-[#f9f8f6] text-[#1a1a1a]">
    <div
      class="max-w-6xl mx-auto px-6 py-28 sm:py-40 flex flex-col sm:flex-row items-center gap-12"
    >
      <div class="flex-1">
        <h1 class="text-5xl sm:text-6xl font-extrabold mb-4 tracking-tight">
          Le Pari du Train
        </h1>
        <p class="text-xl font-light text-[#555] mb-8 leading-relaxed">
          Entre urgence climatique et r√©alit√© du terrain
        </p>
        <p class="text-base text-[#666] mb-10 leading-relaxed max-w-lg">
          Le train s'impose comme la solution la plus sobre pour voyager.
          Pourtant, son usage reste marginal face √† la voiture. Ce projet
          explore pourquoi, √† travers des donn√©es concr√®tes et une analyse
          visuelle du territoire.
        </p>
        <a
          href="#analyse"
          class="inline-block border border-black text-black px-6 py-3 hover:bg-black hover:text-white transition-colors text-sm"
        >
          D√©couvrir les donn√©es ‚Üí
        </a>
      </div>

      <div class="flex-1">
        <img
          src="/Principale.webp"
          alt="TGV en mouvement"
          class="rounded-2xl shadow-xl object-cover w-full h-72 sm:h-96"
        />
      </div>
    </div>
  </section>

  <main class="max-w-6xl mx-auto px-6 py-24 bg-white" id="analyse">
    <section class="mb-20">
      <div class="mb-12 text-center">
        <h2 class="text-4xl font-semibold text-gray-900 mb-3">
          √âmissions de CO‚ÇÇ par mode de transport
        </h2>
        <p class="text-lg text-gray-600 max-w-2xl mx-auto">
          Le transport repr√©sente pr√®s d‚Äôun tiers des √©missions nationales de
          CO‚ÇÇ. Le train reste imbattable en mati√®re de sobri√©t√© carbone.
        </p>
      </div>

      <!-- Conteneur du graphique -->
      <div class="px-8 py-8">
        <div id="chart" class="min-h-[440px] flex justify-center items-center">
          <p class="text-gray-500 text-sm italic">Chargement du graphique...</p>
        </div>
      </div>

      <div
        class="px-8 py-4 bg-[#f5f4f2] border-t border-gray-200 text-sm text-gray-500 rounded-b-2xl"
      >
        Source :
        <a
          href="https://www.data.gouv.fr/api/1/datasets/r/86bb950c-3ad4-4d32-8126-8a236f8449b2"
          class="underline hover:text-black"
        >
          data.gouv.fr ‚Äì Bilan CO‚ÇÇ par mode de transport (ADEME)
        </a>
      </div>
    </section>

    <div
      class="mt-10 px-6 py-4 bg-[#fefae0] border-l-4 border-[#a68a64] max-w-3xl mx-auto rounded-r-md"
    >
      <p class="text-sm text-gray-700">
        üí° <strong>Constat :</strong> Le train √©met 32√ó moins de CO‚ÇÇ que la voiture
        thermique, mais reste minoritaire dans les d√©placements longue distance.
      </p>
    </div>
  </main>
</Layout>

<!-- üîπ Script client -->
<script type="module" client:load>
  import * as Plot from "https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6/+esm";

  const select = document.querySelector("#trajet");
  const chartContainer = document.querySelector("#chart");
  const rawData = JSON.parse(select.dataset.raw);
  const modeKeys = JSON.parse(select.dataset.modekeys);

  function safeFormat(n) {
    return typeof n === "number" && !Number.isNaN(n)
      ? n.toFixed(1)
      : Number(n)
        ? Number(n).toFixed(1)
        : "0.0";
  }

  function getDataForTrajet(trajet) {
    const row = rawData.find((d) => d.Trajet === trajet);
    if (!row) return [];
    return modeKeys
      .map(({ key, mode }) => ({ mode, CO2e: Number(row[key]) || 0 }))
      .filter((d) => d.CO2e > 0);
  }

  function renderChart(trajet) {
    const data = getDataForTrajet(trajet);
    chartContainer.innerHTML = "";

    const chart = Plot.plot({
      marks: [
        Plot.barY(data, {
          x: "mode",
          y: "CO2e",
          fill: (d) => d.mode,
          title: (d) => `${d.mode} : ${safeFormat(d.CO2e)} kg CO‚ÇÇe`,
        }),
        Plot.text(data, {
          x: "mode",
          y: (d) => d.CO2e + 2,
          text: (d) => `${safeFormat(d.CO2e)} kg`,
          textAnchor: "middle",
          fontWeight: "bold",
        }),
        Plot.ruleY([0]),
      ],
      y: { label: "√âmissions (kg CO‚ÇÇe / passager)", grid: true },
      x: { label: "Mode de transport" },
      color: {
        domain: [
          "Train",
          "Autocar",
          "Avion",
          "Voiture √©lectrique",
          "Voiture thermique",
        ],
        range: ["#2563eb", "#f59e0b", "#ef4444", "#06b6d4", "#6b7280"],
        legend: true,
        label: "Mode de transport",
      },
      width: 760,
      height: 440,
      marginBottom: 60,
      style: { fontSize: "13px" },
    });

    chartContainer.append(chart);
  }

  // Affichage initial
  renderChart(select.value);

  // Mise √† jour √† chaque changement
  select.addEventListener("change", (e) => {
    renderChart(e.target.value);
  });
</script>
