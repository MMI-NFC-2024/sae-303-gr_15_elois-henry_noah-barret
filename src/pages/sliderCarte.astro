---
import Layout from "../layouts/Layout.astro";
import CarteGares from "../components/cartes/CarteGare.astro";
import CarteAccessibilite from "../components/cartes/CarteAccessibilite.astro";
---

<Layout>
  <main
    class="mx-auto px-6 py-16 bg-gradient-to-b from-[#f8f5f0] to-[#f3f1ec] min-h-screen"
  >
    <h1 class="text-4xl font-extrabold text-center mb-4 text-[#1a1a1a]">
      La réalité du réseau ferroviaire français
    </h1>

    <p class="text-center text-lg text-[#3d3d3d] max-w-3xl mx-auto mb-12">
      Explorez à travers trois cartes interactives l'état du réseau ferroviaire
      français, son accessibilité en transports en commun, et sa proximité avec
      les lieux culturels.
    </p>

    <section
      class="relative overflow-hidden rounded-3xl shadow-xl bg-[#fdfcfb] border border-[#e2dfda]"
    >
      <div
        id="slider"
        class="flex transition-transform duration-700 ease-in-out"
        style="min-height: 600px;"
      >
        <div
          class="min-w-full flex-shrink-0 flex flex-col items-center justify-center p-8"
        >
          <CarteGares />
        </div>
        <div
          class="min-w-full flex-shrink-0 flex flex-col items-center justify-center p-8"
        >
          <CarteAccessibilite />
        </div>
      </div>

      <button
        id="prev"
        class="absolute top-1/2 left-6 -translate-y-1/2 bg-[#f5e8d7] text-[#1a1a1a] p-3 rounded-full shadow-md hover:bg-[#e8dcc9] transition flex items-center justify-center z-10"
        aria-label="Carte précédente"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-5 h-5"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M15 19l-7-7 7-7"></path>
        </svg>
      </button>

      <button
        id="next"
        class="absolute top-1/2 right-6 -translate-y-1/2 bg-[#f5e8d7] text-[#1a1a1a] p-3 rounded-full shadow-md hover:bg-[#e8dcc9] transition flex items-center justify-center z-10"
        aria-label="Carte suivante"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-5 h-5"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 5l7 7-7 7"></path>
        </svg>
      </button>

      <div class="absolute bottom-5 left-1/2 -translate-x-1/2 flex gap-3 z-10">
        <button
          class="dot w-3 h-3 rounded-full bg-[#1a1a1a] scale-125 transition-all duration-300"
          data-index="0"></button>
        <button
          class="dot w-3 h-3 rounded-full bg-[#d4d1cc] transition-all duration-300"
          data-index="1"></button>

      </div>
    </section>
  </main>
  <script>
    function initSlider() {
      const slider = document.getElementById("slider");
      const dots = document.querySelectorAll(".dot");
      const prev = document.getElementById("prev");
      const next = document.getElementById("next");

      if (!slider || !prev || !next || dots.length === 0) {
        console.error("Slider elements not found!");
        return;
      }

      let index = 0;
      const maxIndex = 2;

      function updateSlide() {

        slider.style.transform = `translateX(-${index * 100}%)`;

        dots.forEach((dot, i) => {
          if (i === index) {
            dot.classList.add("bg-[#1a1a1a]", "scale-125");
            dot.classList.remove("bg-[#d4d1cc]");
          } else {
            dot.classList.remove("bg-[#1a1a1a]", "scale-125");
            dot.classList.add("bg-[#d4d1cc]");
          }
        });

        console.log("Slide actif:", index);
      }

      prev.addEventListener("click", () => {
        index = index > 0 ? index - 1 : maxIndex;
        updateSlide();
      });

      next.addEventListener("click", () => {
        index = index < maxIndex ? index + 1 : 0;
        updateSlide();
      });

      dots.forEach((dot, i) => {
        dot.addEventListener("click", () => {
          index = i;
          updateSlide();
        });
      });

      document.addEventListener("keydown", (e) => {
        if (e.key === "ArrowLeft") {
          index = index > 0 ? index - 1 : maxIndex;
          updateSlide();
        }
        if (e.key === "ArrowRight") {
          index = index < maxIndex ? index + 1 : 0;
          updateSlide();
        }
      });

      updateSlide();
    }

    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", initSlider);
    } else {
      initSlider();
    }
  </script>
</Layout>
